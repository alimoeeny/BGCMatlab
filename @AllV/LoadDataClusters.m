function [DataClusters, FullVData] = LoadDataClusters(DATA)    DataClusters = {};    FullVData = [];    X = {};        gotcfile = 0;    cfile = AllV.ClusterFile(DATA.name,DATA);    C = AllV.mygetappdata(DATA,'Clusters');    stime = CellToMat(C,'savetime');    stime = max(stime(:));    if isempty(stime)        stime = now;    end    ltime = max(CellToMat(C,'loadtime'));    if isempty(ltime)        ltime = now;    end    if exist(cfile,'file')        d = dir(cfile);%datenum > stime if the cluster has been modified on disk since AllVPcs was started        %datenum also > stime normally, but only by a few seconds%allow 10 mins grace in case of network file mismatches        if ~isempty(C) && d.datenum < stime+0.007 && d.datenum < ltime && strcmp(cfile,C{1}.loadname) %already loaded            DataClusters = C;            if isfield(DATA,'FullVData')                FullVData = DATA.FullVData;            end            return;        end        if DATA.probe == 0 %can happen with 'quantifyall', then cause trouble loading clusters            DATA.probe = 1;        end        load(cfile);        DataClusters = Clusters;        if isfield(DATA,'TemplateScores') %out of date            DATA = rmfields(DATA,'TemplateScores','TemplateUsed');        end        if length(Clusters) >= DATA.probe(1) & DATA.plottype == 3 & isfield(Clusters{DATA.probe(1)},'mean') %need to recalculate            oldscores = 1;        end        gotcfile = length(Clusters);        for j = 1:length(DataClusters)            DataClusters{j}.loadname = cfile;            DataClusters{j}.loadtime = now;        end    end    AutoClusters = {};    if gotcfile < DATA.allnprobes || DATA.guistate.UseAutoClusters        afile = AllV.ClusterFile(DATA.name,DATA,'auto',DATA.autocutmode);        if exist(afile,'file')            d = dir(afile);            if ~isempty(C) && (d.datenum < stime+0.007 || ltime > stime) && d.datenum < ltime && strcmp(afile,C{1}.loadname) %already loaded                DataClusters = AllV.CheckClusterFields(C);                if isfield(DATA,'FullVData')                    FullVData = DATA.FullVData;                end                fprintf('Using Cached copy of %s\n',afile);                return;            end            load(afile);            AutoClusters = AllV.CondenseClusters(Clusters,0);            for j = 1:length(AutoClusters)                AutoClusters{j}.loadname = afile;                AutoClusters{j}.loadtime = now;                if isfield(AutoClusters{j},'autocutmode')                    AutoClusters{j}.auto = find(strcmp(AutoClusters{j}.autocutmode,{'mahal', 'james' 'ecker'}));                end            end        end    end    useauto = zeros(1,DATA.allnprobes);    for j = 1:length(AutoClusters)        if j > length(DataClusters) ||  ~isfield(DataClusters{j},'mahal')            DataClusters{j} = AutoClusters{j};                        if DataClusters{j}.auto ==0                DataClusters{j}.auto = 1;            end            useauto(j) = 1;        end        if DATA.guistate.UseAutoClusters                DataClusters{j} = AutoClusters{j};        elseif isfield(DataClusters{j},'savetime')            if DataClusters{j}.auto == 1 && AutoClusters{j}.savetime(1) > DataClusters{j}.savetime(1)                DataClusters{j} = AutoClusters{j};                if DataClusters{j}.auto ==0                    DataClusters{j}.auto = 1;                end                useauto(j) = 1;            end        elseif isfield(DataClusters{j},'mahal')            DATA = AllV.AddErr(DATA,'Probe %d no savetime\n',j);        else            useauto(j) = 1;            if ~isfield(DataClusters{j},'mahal')                DataClusters{j} = AutoClusters{j};                if DataClusters{j}.auto ==0                    DataClusters{j}.auto = 1;                end                useauto(j) = 1;            else            DataClusters{j}.savetime = [0 0];            end        end    end    id = find(useauto);    if ~isempty(id)        fprintf('Using AutoCluster for probe%s\n',sprintf(' %d',id));    end        for j = 1:length(DataClusters)        DataClusters{j} = rmfields(DataClusters{j},'pcplot');        if useauto(j)            DataClusters{j}.loadname = afile;        else            DataClusters{j}.loadname = cfile;        end        if isfield(DataClusters{j},'next') && ~iscell(DataClusters{j}.next) %old style            last = DataClusters{j}.next;            DataClusters{j} = rmfield(DataClusters{j},'next');            DataClusters{j}.next{1} = rmfields(last,'next'); %get rid of next.next        elseif ~isfield(DataClusters{j},'next') && isfield(DataClusters{j},'mahal')            DataClusters{j}.next = {};        end        if ~isfield(DataClusters{j},'excludetrialids')            DataClusters{j}.excludetrialids = [];        end        if ~isfield(DataClusters{j},'clusterprog')            DataClusters{j}.clusterprog = '';        end        if isfield(DataClusters{j},'next')        for k = 1:length(DataClusters{j}.next)            if isfield(DataClusters{j}.next{k},'mahal') && ~isfield(DataClusters{j}.next{k},'chspk') && isfield(DataClusters{j},'chspk')                DataClusters{j}.next{k}.chspk = DataClusters{j}.chspk;%                DataClusters{j}.next{k}.quick = 0; %should always be zero when saved            end        end        end%% clear any fields that shouldn't be there, but might have been saved by% earlier versions%don'r remove clst. Sometimes want this, e.g. Eck autocut        DataClusters{j} = rmfields(DataClusters{j},'r','xy');%        DataClusters{j}.quick = 0; %should always be zero when saved%Mar 2012 allowed clsuters toe be save "quick" to allow subsequent%quantification to save time.        if ~isfield(DataClusters{j},'marked')            DataClusters{j}.marked = 0;        end        if ~isfield(DataClusters{j},'missingtrials')            DataClusters{j}.missingtrials = [];        end        DataClusters{j} = FixCluster(DataClusters{j});        DataClusters{j} = AllV.CheckClusterFields(DataClusters{j},DATA);    end    AllV.mysetappdata(DATA,'Clusters',DataClusters);    if DATA.checkclusters        AllV.CheckClusters(DataClusters,'Loaded');        AllV.CheckClusters(DataClusters, 'CheckNexts','Loaded');        AllV.CheckClusters(DataClusters,'CheckFitSpace');    end