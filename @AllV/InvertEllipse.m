function [xyr, ssq] = InvertEllipse(E, x,y)    options = optimset('TolFun',1e-8);    tryall = 0;    xyrs{1} = invguess(E.ellipse.xy(3:5),E.aspectratio);    E.shape = 0;    ar = E.aspectratio;    E.aspectratio = 1;    [~, details] = AllV.DrawEllipse(E,'noplot');    E.aspectratio = ar;    if tryall        xyrs{4} = E.xyr(3:5);        xyrs{2} = [E.xyr(3:4) 0];        xyrs{3} = [E.xyr(3:4) atan(tan(E.xyr(3)./E.aspectratio))];    end    for j = 1:length(xyrs)        [fits{j}, ssqs(j)] = fminsearch(@findinvellipse,xyrs{j},options,details.x,details.y,E);    end    [ssq,b] = min(ssqs);    xyr = [E.ellipse.xy(1:2) fits{b}];    function newxyr = invguess(xyr,ratio)                xratio = cos(xyr(3)).^2 +sin(xyr(3)).^2./ratio;        newxyr(3) = atan2(sin(xyr(3))./ratio,cos(xyr(3)));        newa = atan2((sin(xyr(3))./(ratio).^0.33),cos(xyr(3)));        xratio = cos(newa).^2 +sin(newa).^2./ratio;        newxyr(1) = xyr(1).*xratio;        newxyr(2) = xyr(2)./xratio;                function [err, details] =  findinvellipse(xyr, x,yin, E)        E.xyr(1:2) = E.ellipse.xy(1:2);        E.xyr(3) = xyr(1);        E.xyr(4) = xyr(2);        E.angle = xyr(3);        E.pos = AllV.xyr2pos(E.xyr);%force using of E.pos to draw ellipse                [~, details] = AllV.DrawEllipse(rmfields(E,'ellipse'),'noplot');        errs = [];        [a,b] = min(x);        [c,d] = min(details.x);        newfitx = circshift(details.x, [0 -d]);        newfity = circshift(details.y, [0 -d]);        newx = circshift(x,[0 -b]);        newy = circshift(yin,[0 -b]);        npts = floor(length(x)/2);        [~, uxid] = unique(newfitx(1:npts));        sy = interp1(newfitx(uxid),newfity(uxid),newx(uxid));%sy is test ellipse, evaluated at X values of target ellipse. So now%miniminze diffs in y.         id = find(~isnan(sy));%points where new ellipse is not in range given y value of last point on ellipse%so that these errors count        nanid = find(isnan(sy));        sy(nanid) = newy(1);        details.errs = newy(uxid)-sy;        err = mean(details.errs.^2);        details.sy = sy;        details.okid = id;%        DrawEllipse(E,'nonorm','color','k');        details.x = newfitx;        details.y = newfity;        details.xid = uxid;        details.sy = sy;        details.newx = newx;        details.newy = newy;        details.yin = yin;        details.pos = E.pos;        details.angle = E.angle;        details.aspectratio = E.aspectratio;        details.shape = 0;        details.color = 'c';