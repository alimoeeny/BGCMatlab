function DATA = SetEllipseDrawing(DATA, shape,varargin)%AllV.SetEllipseDrawing(DATA, shape,varargin)cluster = 1;boundarytype=1;plotargs = {};F = DATA.toplevel;DATA.elmousept.type = 'cluster';DATA.elmousept.selected = [];    j = 1;    while j <= length(varargin)        if strncmpi(varargin{j},'cluster',4)            j = j+1;            cluster = varargin{j};        elseif strncmpi(varargin{j},'boundarytype',10)            j = j+1;            boundarytype = varargin{j};        elseif strncmpi(varargin{j},'gmm',3)            DATA.elmousept.type = varargin{j};        elseif strncmpi(varargin{j},'figure',6)            j = j+1;            F = findobj('type','figure','tag',varargin{j});        elseif strncmpi(varargin{j},'interactive',6)            %dont put this in plotargs        else            plotargs = {plotargs{:} varargin{j}};        end        j = j+1;    end%    tic;DATA.elmousept.boundarytype = boundarytype;DATA.currentcluster = cluster;DATA.elmousept.h= -1;if length(DATA.elmousept.handles) >= cluster && ishandle(DATA.elmousept.handles(cluster))    DATA.elmousept.h = DATA.elmousept.handles(cluster);endif ~isfield(DATA.elmousept,'aspectratio')    yl = get(gca,'ylim');    xl = get(gca,'xlim');    DATA.elmousept.aspectratio = diff(yl)./diff(xl);endDATA.elmousept.shape= shape;DATA.elmousept.down = 0;DATA.elmousept.done = 0;DATA.elmousept.angle = 0;DATA.elmousept.cluster = cluster;DATA.elmousept.plotargs = plotargs;DATA.elmousept.color = DATA.colors{cluster+1};C = AllV.GetClusterDef(DATA.cluster, cluster);if isfield(C,'shape')     if C.shape == 0        DATA.elmousept.pos = AllV.xyr2pos(C.xyr);        DATA.elmousept.angle = C.angle;        DATA.elmousept.xyr = C.xyr;        c = '';    elseif C.shape == 3 && isfield(C,'ellipse')        if DATA.profiling            fprintf('Ell%d=[ %s] A%.2f;\n',C.cluster,sprintf('%.2f ',C.ellipse.xy),DATA.elmousept.aspectratio);        end        if (~isfield(C,'aspectratio') || C.aspectratio == 1) && cellstrcmp('interactive',varargin)            fprintf('Converting Ellipse into plot space for Cl%d\n',C.cluster);            X.ellipse = C.ellipse;            X.auto = 3;            X.aspectratio = DATA.elmousept.aspectratio;            X.color = 'k';            xyr = AllV.InvertEllipse(X);            DATA.elmousept.pos = AllV.xyr2pos(xyr);            DATA.elmousept.angle = xyr(5);            DATA.elmousept.xyr = xyr;        else            DATA.elmousept.pos = AllV.xyr2pos(C.ellipse.xy,DATA.elmousept.aspectratio);            DATA.elmousept.angle = DATA.elmousept.pos(5);            DATA.elmousept.xyr = C.ellipse.xy;            DATA.elmousept.angle = C.ellipse.xy(5);        end        c = 'x';        h = AllV.DrawEllipse(DATA.elmousept);    end    if DATA.profiling        fprintf('Pos%d%c=[ %s%.2f %s];\n',C.cluster,c,sprintf('%.2f ',DATA.elmousept.pos),DATA.elmousept.angle,sprintf('%.2f ',DATA.elmousept.xyr));    endendDATA.elmousept.dragfcn = get(F,'WindowButtonMotionFcn');DATA.clustericon = AllV.SetClusterIcon(DATA);if C.cluster == 1    DATA.cluster.aspectratio = DATA.elmousept.aspectratio;else    DATA.cluster.next{C.cluster-1}.aspectratio = DATA.elmousept.aspectratio;end%should get old Fcns, then reset them after button releaseset(F, 'interruptible','off');set(F, 'WindowButtonDownFcn',@AllV.ButtonPressed);set(F, 'WindowButtonMotionFcn',@AllV.PCButtonDragged);set(F, 'WindowButtonUpFcn',@AllV.ButtonReleased);set(F, 'WindowScrollWheelFcn',@AllV.ScrollWheel);set(F,'UserData',DATA);%toc;sv = findobj(allchild(0),'flat','type','figure','tag',DATA.tag.vare);X.parentfig = DATA.toplevel;X.elmousept = DATA.elmousept;set(sv, 'WindowButtonDownFcn',@AllV.ButtonPressed);set(sv, 'WindowButtonMotionFcn',@AllV.PCButtonDragged);set(sv, 'WindowButtonUpFcn',@AllV.ButtonReleased);set(sv, 'WindowScrollWheelFcn',@AllV.ScrollWheel);set(sv,'UserData',X);sv = findobj(allchild(0),'flat','type','figure','tag',DATA.tag.tmplscore);X.parentfig = DATA.toplevel;X.elmousept = DATA.elmousept;set(sv, 'WindowButtonDownFcn',@AllV.ButtonPressed);set(sv, 'WindowButtonMotionFcn',@AllV.PCButtonDragged);set(sv, 'WindowButtonUpFcn',@AllV.ButtonReleased);set(sv, 'WindowScrollWheelFcn',@AllV.ScrollWheel);set(sv,'UserData',X);%set(F, 'Interruptible','off');