function [x, xid] = GetValues(DATA, name, dim)%AllV.GetValues(DATA, name, dim) Get a vector of spike parameters based on%a name. If name is a cellstr, returns a matrix of values;    x = [];    xid = 0;    templateid = 0;        if iscell(name)        for j = 1:length(name)            x(:,j) = AllV.GetValues(DATA, name{j});        end        return;    end    if regexp(name,'^T[0-9]+\.')                templateid = sscanf(name,'T%d');        name = name(4:end);    end    tid = find(strcmp(name,DATA.TemplateLabels));    if isempty(tid)        if sum(strncmp(name,{'ADC', 'Cen' 'dvr' 'acc'},3))            AllVoltages = AllV.mygetappdata(DATA,'AllVoltages');        end        if strncmp(name,'PC',2)           pc = sscanf(name,'PC%d');           x = DATA.pcs(:,pc);           xid = pc;        elseif strncmp(name,'TemplatePC',10)            npc= sscanf(name,'TemplatePC%d');            T = DATA.TemplateScores;            if isappdata(DATA.toplevel,'AllTemplates')                A = getappdata(DATA.toplevel,'AllTemplates');                if length(A) > 1                    T = cat(2,A(1).Scores,A(2).Scores);                end            end            if isfield(DATA,'TemplatePC')                dims = DATA.TemplatePC.dims;                x = T(:,dims) *DATA.TemplatePC.ev(:,npc);            else                if npc ==1                    x = T(:,3);                else                    x = T(:,10);                end            end            xid = npc;        elseif strcmp(name,'ADC1csd')            AllVoltages = diff(AllVoltages,2,1);            p = DATA.vpts(1,1);            if p > 1                p = p-1;            elseif p > size(AllVoltgates,1)                p = size(AllVoltages,1);            end            x = squeeze(AllVoltages(p,DATA.vpts(1,2),:));        elseif strncmp(name,'ADC1dvdy',8)            AllVoltages = diff(AllVoltages,1,1);            p = DATA.vpts(1,1);            if p > 1 && strcmp(name,'ADC1dvdy1')                p = p-1;            elseif p > size(AllVoltages,1)                p = size(AllVoltages,1);            end            x = squeeze(AllVoltages(p,DATA.vpts(1,2),:));                    elseif strncmp(name,'ADC',3)            if strfind(name,'dvdt')                AllVoltages = diff(AllVoltages,[],2);            end            if strncmp(name,'ADC1',4)                x = squeeze(AllVoltages(DATA.vpts(1,1),DATA.vpts(1,2),:));                xid = DATA.vpts(1,1);            elseif strncmp(name,'ADC2',4)                x =squeeze(AllVoltages(DATA.vpts(1,3),DATA.vpts(1,4),:));                xid = DATA.vpts(1,1);            elseif regexp(name,'ADC [0-9]*:')                [a,b] = sscanf(name,'ADC %d:%d');                x =squeeze(AllVoltages(a(1),a(2),:));                xid = a;            end        elseif strcmp(name,'energysum')            x = sum(DATA.energy)';        elseif regexp(name,'accel[0-9]+')            AllVoltages = diff(AllVoltages,2,2);            p = sscanf(name,'accel%d');            V = smooth(squeeze(AllVoltages(p,:,:)),10);            x = max(V)';        elseif regexp(name,'dvrange[0-9]+')            AllVoltages = diff(AllVoltages,[],2);            p = sscanf(name,'dvrange%d');            mx = max(AllVoltages(p,:,:),[],2);            mn = min(AllVoltages(p,:,:),[],2);            x = squeeze(mx-mn);        elseif strcmp(name,'energy')            x = DATA.energy';        elseif regexp(name,'energy[0-9]+')            p = sscanf(name,'energy%d');            p = find(DATA.chspk == p);            if size(DATA.energy,1) >= p                x = DATA.energy(p,:)';            end        elseif strcmp(name,'spkvar')            x = DATA.spkvar';        elseif strcmp(name,'CentroidSplit')%Area under poisitive region post spike            t = find(DATA.spts ==0);            C = squeeze(AllVoltages(DATA.probe(1),t:end,:));            C(C < 0) = 0;            x = sum(C.^2)';        elseif strcmp(name,'CentroidSplit')%centroid of positiv points only                        C = squeeze(AllVoltages(DATA.probe(1),:,:));            C(C < 0) = 0;            x = C' * DATA.spts'./sum(C)';        elseif strcmp(name,'Centroid')            C = squeeze(AllVoltages(DATA.probe(1),:,:)).^2;            x = C'.^2 * DATA.spts'./sum(C.^2)';        else            if strcmp(name,'rTchan')                xid = 1;            elseif dim(1) == 3                xid = dim(2);            end            if ~isempty(xid) &&  isfield(DATA,'TemplateScores')                x = DATA.TemplateScores(:,xid);                            end        end    else        if isempty(tid)        elseif templateid > 0            A = getappdata(DATA.toplevel,'AllTemplates');            if length(A) >= templateid                x = A(templateid).Scores(:,tid(1));            else                cprintf('red','Do not have Template SCores for C%d\n',templateid);                x = DATA.TemplateScores(:,tid(1));            end            xid = [3 templateid tid(1)];        else            if isfield(DATA,'TemplateScores')                x = DATA.TemplateScores(:,tid(1));                xid = [3 0 tid(1)];            else                x = DATA.pcs(:,5);                xid = 1;            end        end    end            