function plots = PlotClusterXY(DATA, C, varargin)%plots = PC.PlotClusterXY(DATA, C, varargin)%see also PC.PlotClusterPoints    titlemode = 0;    tightplot = 0;    twoplot = 0;    clnum = 1;    axdata.allxy = 0;    xyargs = {};    ispk = [];    if isfield(C,'rawxy')        C.xy = C.rawxy;    end        j = 1;    while j <= length(varargin)        if strncmpi(varargin{j},'allxy',5)            axdata.allxy = 1;        elseif strncmpi(varargin{j},'plotgmcid',8)            xyargs = {xyargs{:} varargin{j}};        elseif strncmpi(varargin{j},'shorttitle',8)            titlemode = 1;        elseif strncmpi(varargin{j},'vshorttitle',8)            titlemode = 2;        elseif strncmpi(varargin{j},'twoplot',5) %Combine spaces > 1 cluster            twoplot = 1;            clnum = [1 2];        elseif strncmpi(varargin{j},'tight',5)            tightplot = 1;        elseif sum(strncmpi(varargin{j},{'cellid' 'cluster'},6))            j = j+1;            clnum = varargin{j};        elseif strncmpi(varargin{j},'ispk',4)            j = j+1;            ispk = varargin{j};        elseif strncmpi(varargin{j},'xydata',6)            j = j+1;            C.xy = varargin{j};        else            xyargs = {xyargs{:} varargin{j}};        end        j = j+1;    end    lincolor = 'r';       if ~isfield(C,'xy') %empty probesin grid data        plots = [];        return;    end    p = C.probe(1);    if isfield(C,'exptid')        e = C.exptid;    else        e = NaN;    end    if length(clnum) > 1 || isempty(clnum)        CC = C;    elseif clnum > 1 && length(C.next) > clnum-2 && isfield(C.next{clnum-1},'xy');        CC = C.next{clnum-1};    else        CC = C;    end    if isfield(DATA,'toplevel')        axdata.toplevel = DATA.toplevel;        axdata.eid = e;        axdata.probe = p;    end    xcl = PC.FindExcludedTrials(DATA, e, p,1,C);    if ~isempty(ispk)        uid = ispk;    elseif length(xcl)        uid = PC.FindSpikes(DATA, C, xcl);    else        uid = 1:size(C.xy,1);    end    hold off;    if DATA.plot.density        lincolor = 'w';        [plots, D] = DensityPlot(CC.xy(uid,1),CC.xy(uid,2),'ynormal');        if DATA.plot.scaledensity            r = PC.CalcRadius(CC,[D.x(:) D.y(:)]);            id = find(r < 1);            cmax = max(D.z(id));            caxis([0 cmax]);        end        hold on;    else        if isempty(clnum) %can't plot this            clnum = 1;        end        plots = PC.PlotClusterPoints(C,uid,clnum, xyargs{:});        if DATA.show.linecontextmenus            PC.AddLineContextMenu(DATA, plots, C.exptid, C.probe(1));        end        set(gca,'UserData',axdata,'uicontextmenu',PC.AddContextMenu(gca,'subplot'));    end    if length(clnum) > 1        spstr = 'D1/D2';    elseif clnum > 1 && length(C.next) >= clnum-1 && isfield(C.next{clnum-1},'space')        spstr = [DATA.SpaceTypeLabels{C.next{clnum-1}.space(1)} sprintf(' %d',C.next{clnum-1}.space(2:end))];    elseif C.shape == 3 %Ecker Auto Cut        spstr = 'Eauto';        spstr = [DATA.SpaceTypeLabels{C.space(1)} sprintf(' %d',C.space(2:end)) '*'];    elseif isfield(C,'space')        spstr = [DATA.SpaceTypeLabels{C.space(1)} sprintf(' %d',C.space(2:end))];    else        spstr = '';    end    if isfield(DATA,'GaussFitdp') && size(DATA.GaussFitdp,1) >= e%        spstr = [sprintf('(Fit %.1f)',DATA.GaussFitdp(e,p,2)) spstr];    end    if isfield(C,'gmfit2d') && DATA.plot.showboundary            xy = GMBoundary(C); %,'plot to show image            plot(xy(:,1),xy(:,2),'k');    end    axis('tight');    xl = get(gca,'xlim');    yl = get(gca,'ylim');    gmd = PC.DistanceMeasure(CC, 1,DATA.mahaltype);    if isfield(C,'bestspace') && C.space(1) == 6        if titlemode == 2            c = DATA.NDSpaceChars(C.space(2));            h=title(sprintf('E%.0fP%d %.2f ND%c',C.exptno,p,PC.DistanceMeasure(C, 1, DATA.mahaltype),c));        elseif titlemode == 1           h= title(sprintf('E%.0fP%d %.2f  %s %.2f',C.exptno,p,gmd,spstr,C.mahal(4)));        else           h= title(sprintf('P%d Ex %.0f Gm %.2f  %s (%.2f,%.2f for space %.0f)%.0f',p,C.exptno,gmd,spstr,C.mahal(4),C.bestspace(1),C.bestspace(2),C.sign));        end    else        if titlemode == 2            c = DATA.SpaceChars(C.space(1));            h=title(sprintf('E%.0fP%s %.2f%c',C.exptno,PC.ProbeLabel(p, DATA, DATA.currentcluster),gmd,c));        elseif titlemode == 1            h=title(sprintf('E%.0fP%s %.2f %.2f %.1f',C.exptno,PC.ProbeLabel(p,DATA),gmd,C.dropi(3)));        else            h =title(sprintf('E%.0fP%s I%.2f  %s (%.2f)%.0f D%.1f %d/%d',C.exptno,PC.ProbeLabel(p,DATA,DATA.currentcluster),gmd,spstr,CC.mahal(4),C.sign,CC.dropi(3),CC.ncut,C.nspks));        end    end    if C.shape == 1        PC.DrawEllipse(C,'color',lincolor);    elseif C.shape == 2        PC.DrawEllipse(C,'color',lincolor);    elseif C.shape == 0        C.down = 0;        PC.DrawEllipse(C,'color',lincolor);    end    for j = 1:length(C.next)         if isfield(C.next{j},'shape')        C.next{j}.down = 0;        if C.next{j}.shape == 0            PC.DrawEllipse(C.next{j},'color',DATA.colors{j+2});        end        end    end    setappdata(0,'control_is_down',0);    if clnum(1) > 1        set(h,'color',DATA.colors{clnum+1});    elseif PC.isacell(DATA,e,p)        sz = get(h,'fontsize');        sz = sz .* 1.4;        set(h,'color','b','fontweight','bold','fontsize',sz);    elseif C.auto == 1        set(h,'color','r');    elseif DATA.plot.density        set(h,'color','w');    end        set(gca,'Xlim',xl,'ylim',yl);    if DATA.plot.trighist        PC.AddTrigHist(DATA,C, clnum);    end    cls = Counts(C.clst);    xl = get(gca,'xlim');    strs = {'MU' 'SU'};    if isfield(C,'jamescluster') && strcmp(C.autocutmode,'james')    elseif isfield(C,'eckercluster') && strcmp(C.autocutmode,'ecker')        for j = 2:length(C.eckercluster.SU)            if j <= length(cls)            text(-0.02,0.8 - j * 0.1,sprintf('%d%s%d',j-1,strs{1+C.eckercluster.SU(j)},cls(j)),...                'color',DATA.colors{j},'units','normalized',...                'horizontalalignment','right');            else                fprintf('EckerCluster has SU not in clst\n');            end        end    end    if tightplot        h = get(gca,'title');        yl = get(gca,'ylim');        a = get(h,'position');        a(2) = yl(2);        a(1) = mean(xl);        set(h,'position',a,'VerticalAlignment','top');    end