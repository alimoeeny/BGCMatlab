 function [X, varargout] = CheckClusters(DATA, type)     if iscluster(DATA)     Clusters = DATA;     Expts ={}; elseif isfigure(DATA)     F = DATA;     DATA = GetDataFromFig(F);     Clusters = PC.GetValue(F, 'Clusters');     Expts = getappdata(DATA.toplevel,'Expts'); else     Clusters = getappdata(DATA.toplevel,'Clusters');     Expts = getappdata(DATA.toplevel,'Expts'); endif iscell(type)    for j = 1:length(type)        X{j} = PC.CheckClusters(DATA,type{j});    end    return;endX.errs = {}; for j = 1:length(Clusters)     if ~isempty(Clusters{j})         if iscell(Clusters{j})             e = floor(Clusters{j}{1}.exptno);             if isfield(Clusters{j}{1},'exptid')                 eid = Clusters{j}{1}.exptid;             else                 eid = j;             end         else             e = floor(Clusters{j}.exptno);             if isfield(Clusters{j},'exptid')                 eid = Clusters{j}{1}.exptid;             else                 eid = e;             end         end     if isempty(Expts) || isempty(Expts{e})         nt = 0;     else        nt = length(Expts{e}.Trials);     end     for k = 1:length(Clusters{j})         C = Clusters{j}{k};         if strcmp(type,'exclusions') && isfield(C,'excludetrialids')             if isfield(C,'restricttimerange')                 fprintf('Row%dP%d %d/%d excluded Trials (%.1f-%.1f)\n',j,k,length(C.excludetrialids),nt,C.restricttimerange(1),C.restricttimerange(2));             else                 fprintf('Row%dP%d %d/%d excluded Trials\n',j,k,length(C.excludetrialids),nt);             end         elseif strcmp(type,'nclusters')             if isfield(C,'next') & length(C.next) > 1                 fprintf('Row%dP%d %d clusters\n',j,k,length(C.next)+1);             end         elseif strcmp(type,'fitspace')             PC.CheckFitDim(C);         elseif strcmp(type,'fittimes')             if isfield(C,'savetime') && C.savetime(end)-C.savetime(1) < -0.1                 cprintf('blue','Expt%d(Row%d)P%d Fit is old\n',DATA.exptid(j),j,k);             end         elseif strcmp(type,'celldefined')             [a, cells, clid] = PC.isacell(DATA,eid,k);              for c = 1:length(clid)                 if clid(c) > 1 && (length(C.next) < clid(c)-1 || isempty(C.next{clid(c)-1}))                    X =  AddError(X,'-show','Expt%d(Row%d)P%d Cluster %d is Cell %d but its empty\n',DATA.CellDetails.exptids(j),j,k,clid(c),cells(c));                 end             end         elseif strcmp(type,'autospikes')             Spk = ReadSpikeFile(C);             if Spk.Header.error                 fprintf('Spike Mismatch %s\n',str(C));             end         elseif strcmp(type,'autofits')             if length(C.bestfit) < 2                 fprintf('%s length(bestfit) == %d\n',str(C),length(C.bestfit));                 C.bestfit(2) = 0;             end             [newC, fit] = clust.SetFit(C,C.bestfit);             C = clust.Swap(C, 'reverse'); %undo any swaps             %use newc, not fit, in case of renumbering             mratio = (sum(C.clst(:) == newC.clst(:))) ./ length(C.clst);             if mratio < 1                 clsa = unique(C.clst);                 clsb = unique(fit.clst);                 nc(1) = length(clsa);                                nc(2) = length(clsb);                                trueerr = [0 0];                 if length(clsa) == length(clsb)                     xstr = 'Same Clusters';                 else                     xstr = sprintf('%d,%d clusters',length(clsa),length(clsb));                 end                 if nc(1) ~= length(CellToMat(C.next))+2                     xstr = sprintf('Next Mismatch %s',xstr);                     trueerr(1) = 1;                 end                 if nc(2) ~= length(CellToMat(C.next))+2                     if trueerr(1)                         xstr = sprintf('Both %s',xstr);                     else                         xstr = sprintf('Best has Next Mismatch %',xstr);                     end                     trueerr(2) = 1;                 end                 X=AddError(X,'-show','AutoFit Mismatch %s Fit %s (%s) %.3f %s',str(C),str(C.bestfit),str(C.autofiti),mratio,xstr);                 if trueerr(1) > 0                     Clusters{j}{k} = newC;                 end             end         end     end     end endif nargout == 2    varargout{1} = Clusters;end