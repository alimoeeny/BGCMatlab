function SetCellFromLine(a,b, cluster, cell, varargin)cellargs = {};listtype = PC.GetValue(a, 'listtype');j = 1;    while j <= length(varargin)        if strncmpi(varargin{j},'autolist',5)            listtype = 'autolist';        elseif strncmpi(varargin{j},'duplicate',5)            cellargs = {cellargs{:} varargin{j}};        elseif strncmpi(varargin{j},'muonly',5)            cellargs = {cellargs{:} varargin{j}};        end        j = j+1;    end    axdata = get(gca,'UserData');    if ischar(cluster)        listtype = cluster;        cluster = 0;    end    if ~isfield(axdata,'clnum') || isempty(axdata.clnum)        axdata.clnum = 1;    end    if cluster == 0 && axdata.clnum > 0        cluster = axdata.clnum;     end    if isfield(axdata,'toplevel;')    DATA = get(axdata.toplevel,'UserData');    else    DATA = GetDataFromFig(a);    end    DATA = SaveCallback(DATA,a);    if sum(strcmp(cell,{'optimize' 'combinecells' 'comparecells' 'comparepoints'}))        Clusters = getappdata(DATA.toplevel,'Clusters');    end    modified = 'none';    if strcmp(cell,'optimize')        DATA.cluster = Clusters{axdata.eid}{axdata.probe};        C = OptimizeCluster(DATA);        Clusters{axdata.eid}{axdata.probe} = C;        PC.SetFigure(DATA,DATA.tag.xyplot); hold off;        PC.PlotClusterXY(DATA,C,'shorttitle','tight');        return;    elseif strncmp(cell,'cellrates',7)        PC.PlotClusterRates(DATA, 'rateseqone');        return;    elseif strncmp(cell,'allxy',5) || strncmp(cell,'allspk',6)        DATA.currentpoint(1) = axdata.eid;        DATA.currentpoint(2) = axdata.probe;        if strcmp(cell,'allxyprobe')            DATA = PC.PlotExptsProbe(DATA, 'AllprobeXY');        elseif strcmp(cell,'allxyexpt')            DATA = PC.PlotAllProbeXY(DATA, 'AllexptXY');        elseif strcmp(cell,'allxycell')            PC.PlotAllCellXY(DATA);%            DATA = PC.PlotAllProbeXY(DATA, 'AllCellXY');        elseif strcmp(cell,'allspkscell')            PC.PlotAllCell(DATA, 'allspks');        elseif strcmp(cell,'allspksexpt')            DATA = PC.PlotAllProbe(DATA, 'allspks');        elseif strcmp(cell,'allspksprobe')            DATA = PC.PlotAllProbe(DATA, 'allprobespks');        end        set(DATA.toplevel,'UserData',DATA);        return;    elseif strcmp(cell,'duplicate')        xc = getappdata(DATA.toplevel,'xcCellList');        a = cluster;        cluster = xc(a).cl;        axdata.probe = xc(a).p;        cell = -axdata.cell;    elseif strcmp(cell,'spoolauto')        PC.SpoolSpikes(DATA, [axdata.eid axdata.probe],'auto');        return;    elseif strcmp(cell,'spool')        PC.SpoolSpikes(DATA, [axdata.eid axdata.probe]);        return;    elseif strcmp(cell,'findduplicate')        PC.FindDuplicates(DATA, [axdata.eid axdata.probe axdata.clnum]);        return;    elseif strcmp(cell,'comparecells')        [a,b] = find(DATA.selectprobe);        for j = 1:length(a)            cl(j,1) = DATA.selectcluster(a(j),b(j));            cells(j) = DATA.CellList(a(j),b(j),cl(j));        end        currentcell = DATA.CellList(axdata.eid,axdata.probe,axdata.clnum);        if length(cells) == 1            cells(2) = currentcell; %comparison with self        end        Clusters = getappdata(DATA.toplevel,'Clusters');        PC.CompareCells(DATA,Clusters,DATA.CellList,cells(1),cells(2));        return;    elseif strcmp(cell,'comparepoints')        if strcmp(listtype,'autolist')            [a,b] = find(DATA.selectautoprobe);        else            [a,b] = find(DATA.selectprobe);        end        for j = 1:length(a)            cl(j,1) = DATA.selectcluster(a(j),b(j));            cells(j) = DATA.CellList(a(j),b(j),cl(j));        end        currentcell = DATA.CellList(axdata.eid,axdata.probe,axdata.clnum);        PC.CompareCells(DATA,Clusters,DATA.CellList,[a b cl],1);        return;    elseif strcmp(cell,'combinecells')        [a,b] = find(DATA.selectprobe);        for j = 1:length(a)            cells(j) = DATA.CellList(a(j),b(j),DATA.selectcluster(a(j),b(j)));        end        currentcell = DATA.CellList(axdata.eid,axdata.probe,axdata.clnum);        DATA.CellList = celllist.CombineCells(DATA.CellList, currentcell, cells);        modified = 'celllist';        PC.CompareCells(DATA,Clusters,DATA.CellList,currentcell);    elseif strcmp(cell,'deletecell')        currentcell = DATA.CellList(axdata.eid,axdata.probe,axdata.clnum);        id = DATA.CellList == currentcell;%Hide it as a duplicate of nothing                DATA.CellList(id) = -(currentcell+0.5);         modified = 'celllist';    elseif sum(strcmp(cell,{'getfullv' 'refcut' 'lastcut' 'forcefullv'}))        PC.CallAllVPcs(DATA, axdata.eid, axdata.probe,cell,listtype);        return;    end    if strcmp(modified,'celllist')        PC.SaveCellList(DATA);    else        if sum(DATA.selectprobe(:) >0) > 1            Clusters = getappdata(DATA.toplevel,'Clusters');            [a,b] = find(DATA.selectprobe > 0);            for j = 1:length(a)                DATA = PC.SetCellEntry(DATA, Clusters{a(j)}{b(j)}, a(j),b(j),cluster, cell,'nosave',cellargs{:});            end            DATA = PC.SaveCellList(DATA);        else            DATA = PC.SetCellEntry(DATA, [], axdata.eid,axdata.probe,cluster, cell, varargin{:});        end        DATA.currentpoint(2) = axdata.probe;        if isfield(axdata,'celllabels') && ishandle(axdata.celllabels)            delete(axdata.celllabels);            axdata.celllabels = PC.AddCellLabels(DATA, axdata.eid, axdata.probe);            set(gca,'UserData',axdata);        end    end    DATA = PC.PlotCellList(DATA,'showfig');    set(DATA.toplevel,'UserData',DATA);