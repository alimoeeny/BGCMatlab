function xyr = FixBoundary(DATA, Clusters, e, p)%PC.FixBoundary(DATA, Clusters, e, p)  Optimizes Cluster Boundary%PC.FixBoundary(DATA, C)%if isempty(Clusters)    C = PC.GetClusterInfo(DATA,[e p DATA.currentcluster],'clst');else    C = PC.GetClusterInfo(Clusters,[e p DATA.currentcluster],'clst');endif C.shape(1) == 0    [xyr, fits] = clust.OptimizeEllipse(C,'mahaldprimenearsu');    h = DrawEllipse(xyr,'add');    gain = (fits.isolation(1)./C.isolation(1)) -1;        text(xyr(1),xyr(2),sprintf('%.1f%%',gain*100),'color',get(h,'color'));    fprintf('Isolation Improves %.1f%% %.3f vs %.3f\n',gain*100,fits.isolation(1),C.isolation(1));    return;end        xy = xyrotate(C.xy(:,1),C.xy(:,2),C.angle);    fits{1}.params = C.fitdpparams(1,:);    fits{2}.params = C.fitdpparams(2,:);    fits{1}.state.meanlimit = [min(xy(:,1)) C.crit];    fits{2}.state.meanlimit = [C.crit max(xy(:,1))];    fits{1}.amp = C.fitdpparams(1,3);    fits{2}.amp = C.fitdpparams(1,3);%    B = mydip(fits);    B = MyDip(xy(:,1),'idlist',C.clst);    crit = B.x(B.dip(1));    if DATA.plot.hist || DATA.plot.refitgm        oldf = gcf;        PC.SetFigure(DATA,DATA.tag.hist,'front');        hst = PC.PlotClusterHistogram(DATA, C, DATA.plot.refitgm,'cluster', DATA.currentcluster);        plot([crit crit],get(gca,'ylim'));        id = find(hst.x > min(B.x) & hst.x < max(B.x));        if ~isempty(id)        cmax = max(hst.nsp(id));        plot(B.x,B.y .* cmax./max(B.y),'g-');        end        figure(oldf);    end    hold on;    if B.dip(2)./min(B.dip(3:4)) < 0.9 && B.d > 0.1 & B.d < 0.97        xy = xyrotate([crit crit],[minmax(xy(:,2))'],-C.angle);        plot(xy(:,1),xy(:,2),'k-');    end    xyr = crit;    