 function R = CheckAllRateSequences(DATA) %R = CheckAllRateSequences(DATA) Check rate seq for all cell %R contains nexpts X ncells arrays of consistency metrics % where nexpts is number of expt TYPES, not blocks.DATA = GetDataFromFig(DATA);        plottype = 2;Expts = getappdata(DATA.toplevel,'Expts');Clusters = PC.GetValue(DATA,'Clusters');R.cellid = [];if isempty(Clusters)    return;endexname = unique(DATA.expnames);exname = exname(~strcmp('',exname)); %remove blanksR.exnamelist = exname;CellList = PC.GetValue(DATA,'CellList');Im = zeros(length(Expts),max(CellList(:)));    cellid = unique(CellList);    cellid = cellid(cellid > 0);x = getappdata(DATA.toplevel,'RateCheckData');if isfield(x,'plottype')    R.plottype = x.plottype;else    R.plottype = 'cv';endif isempty(cellid)    return;endalleid = [];for j = 1:length(exname)    expid = find(strcmp(exname{j},DATA.expnames));%exid is true expt numbers        eid = find(ismember(DATA.exptlist,expid)); %row indices    R.explist{j} = eid;    for k = 1:length(cellid)        c = cellid(k);        E = {};        for e = 1:length(eid)            [p, cl] = find(squeeze(CellList(eid(e),:,:)) == c);            if length(p) > 1                fprintf('Cell %d Doubly Defined Expt %d P %s\n',c,eid(e),sprintf('%d ',p));                p = p(1);                cl = cl(1);            end            if ~isempty(p)                E{e} = PC.CountExptSpikes(DATA, Expts{expid(e)}, Clusters{eid(e)}{p},cl);            end        end        if ~isempty(E)            check = CheckExptRates(expt.fix(E,'deblank'),'print');            R.ff(j,k) = max([check.errs.ff]);            R.allff{j,k} = [check.errs.ff];            R.blkcv(j,k) = check.blkcv;            R.blkff(j,k) = check.blkff;            R.blkskew(j,k) = check.blkskew;            R.warning(j,k) = sum(check.warning(2:end));            R.slopes(j,k) = max(abs([check.errs.slope]));            R.jumps(j,k) = check.jumps;            R.steps{j,k} = check.steps;            R.step(j,k) = max([check.steps.step]);            R.njump(j,k) = check.njump;            R.maxjump(j,k) = check.maxjump;            exid = [check.errs.exptno];            alleid = union(alleid,exid);            Im(exid,c) = check.errs.ff;            ffid = find([check.errs.ff] > DATA.checkrate.ff);            Im(exid(ffid),c) = Im(exid(ffid),c)+1;            a = find(abs([check.errs.slope]) > DATA.checkrate.slope);            Im(exid(a),c) = Im(exid(a),c)+2;            a = find(abs(log([check.diffs])) > DATA.checkrate.diff);            if length(a) > 2 && sum(check.warning(2:end)) == 0                a; %not useful?            end            R.diffs(j,k) = max(abs(log([check.diffs])));            Im(exid(a),c) = Im(exid(a),c)+4;            R.Im = Im;        end    endendR.cellid = cellid;R.exptid = alleid;R.toplevel = DATA.toplevel;setappdata(DATA.toplevel,'RateCheckData',R)      PC.SetFigure(DATA,DATA.tag.clusters);PC.PlotRateCheck(R);