function PlotMenu(a, b, fcn, type, varargin)    DATA = GetDataFromFig(a);    DATA = SaveCallback(DATA,a);    listtype = 'default';    if isfield(DATA,'autolist') && isfield(DATA.autolist,'listtype');        listtype = DATA.autolist.listtype;    end    onoff = {'off' 'on'};        e = DATA.currentpoint(1);    p = DATA.currentpoint(2);    if strcmp(fcn,'expt') && strcmp(type,'combine')        Data.Expt = PC.PlotCombinedExpt(DATA);    elseif strcmp(fcn,'expt') && strcmp(type,'combinecells')        Data.Expt = PC.PlotCombinedExpt(DATA,'allcells');    elseif strcmp(fcn,'expt') && strcmp(type,'combinecellsmu')        Data.Expt = PC.PlotCombinedExpt(DATA,'allcellsmu');    elseif strcmp(fcn,'expt') && strcmp(type,'plotcombinecells')        AllE = getappdata(DATA.toplevel,'AllExpts')        PlotAllCellFiles(AllE);    elseif strcmp(fcn,'expt')%       PC.PlotAllCell(DATA, type); %surely don't need this        DATA.plotexpttype = type;        m = get(a,'Parent');        c = get(m,'Children');        for j = 1:length(c)            set(c(j),'Checked','off');        end        set(a,'checked','on');        PC.PlotExptCounts(DATA,DATA.currentpoint(1),DATA.currentpoint(2),DATA.currentcluster);    elseif strcmp(fcn,'spikes')        if strcmp(type,'SpoolXY')            PC.SpoolCurrentSpikes(a,b,'showxy');        elseif strcmp(type,'nextcellexpt')            xstr = '';            c = DATA.currentcell;            eid = DATA.currentpoint(1);            CellList = PC.GetValue(DATA, 'CellList');            [e,p,cl] = celllist.find(CellList,c);            if varargin{1} > 0                id = find(e > eid,1);            elseif varargin{1} == 0                id = find(e ==eid);            else                id = find(e < eid);                if isempty(id)                    while length(id) < 2                        c = c-1;                        [e,p,id] = celllist.find(CellList,c);                        if c < 1                            c = max(CellList(:));                        end                    end                else                    id = id(end);                end            end            if isempty(DATA.currentcluster)                [e,p,clid] = celllist.find(CellList,c);                xid = find(e == DATA.currentpoint(1));                DATA.currentcluster = clid(xid);            end            if isempty(id)                clear e;                while length(id) < 2                    c = c+1;                    if c > max(CellList(:))                        c = 1;                    end                    [e,p,id] = celllist.find(CellList,c);                end                DATA.currentcell = c;                pos = [e(1) p(1) id(1); e(2) p(2) id(2)];                DATA.currentcluster = id(2);                id = 2;            else                if e(id)-eid > 1 %gap                    pos = [eid DATA.currentpoint(2) DATA.currentcluster; eid+1 DATA.currentpoint(2) DATA.currentcluster];                    xstr = 'Gap';                else                    pos = [eid DATA.currentpoint(2) DATA.currentcluster; e(id) p(id) cl(id)];                    DATA.currentcluster = cl(id);                end            end            D = PC.CompareQuickSpks(DATA, pos);            cid = find(CellList(pos(2,1),pos(2,2),:) == c);            if ~isempty(cid)                figure(D.fig(2));                text(2,1,sprintf('Cell%d%s',c,xstr),'color',DATA.colors{cid+1},'fontsize',18);            else                figure(D.fig(2));                text(2,1,sprintf('%s',xstr),'fontsize',18);            end            cid = find(CellList(pos(1,1),pos(1,2),:) == c);            if ~isempty(cid)                figure(D.fig(1));                text(2,1,sprintf('Cell%d',c),'color',DATA.colors{cid+1},'fontsize',18);            end            DATA.currentpoint = [e(id) p(id)];            GetFigure(DATA.tag.rateseq,'parent',DATA.toplevel); hold off;            PC.PlotRateSequence(DATA, pos);            SetData(1);                                    elseif strcmp(type,'NextFit')            x = getappdata(DATA.toplevel, 'SpikeComparison');            C = PC.GetClusterInfo(DATA, x.pos);            if ~isfield(x,'fitnumber')                x.fitnumber = 0;            end            fiti = x.fitnumber +1;            [allfits, allf] = AllV.CombineFits(DATA, C{2}.autofits, 'expandall');            if fiti > length(allfits)                fiti = 1;            end            x.fitnumber = fiti;            setappdata(DATA.toplevel,'SpikeComparison',x);            fitnumber = allf.fiti(fiti,:);            C{2} = clust.SetFit(C{2},fitnumber);            D = PC.CompareQuickSpks(DATA,C);            figure(D.fig(2));            text(2,1,sprintf('Fit %s',str(fitnumber)),'fontsize',18);        elseif strcmp(type,'MarkComparison')            x = getappdata(DATA.toplevel, 'SpikeComparison');            mark.pos = x.pos;            mark.reason = 'SpikeCmparison';            mark.type = 'SpikeCmparison';            mark.time = now;            mark = CopyFields(mark,x,'orderid','cells','matchcells','cell');            findcell.AddMark(DATA, mark);        elseif strcmp(type,'Spool')            PC.SpoolCurrentSpikes(a,b);        end    elseif strcmp(fcn,'showplot')        type = get(a,'tag');        if isfield(DATA.plot,type)            DATA.plot.(type) = ~DATA.plot.(type);            if isprop(a,'checked')                set(a,'checked',onoff{1+DATA.plot.(type)});            end        else            DATA.plot.(type) = 1;            fprintf('Adding Field %s in DATA.plot\n',type);        end        PC.SetGUI(DATA);    elseif strcmp(fcn,'xyseq')        if strmatch(type,'density')                        Expts = getappdata(DATA.toplevel,'Expts');            DATA.plot.xyseqdensity = ~DATA.plot.xyseqdensity;            if DATA.plot.xyseqdensity                PC.PlotXYSequence(DATA, DATA.currentpoint,Expts{e},'density');            else                PC.PlotXYSequence(DATA, DATA.currentpoint,Expts{e});            end        end    elseif strcmp(fcn,'xcorr')        if strmatch(type,'zoom')            DATA.plot.xcmax = varargin{1};        elseif strmatch(type,'spkzoom')            DATA.plot.synctmax = varargin{1};        elseif strmatch(type,'recalcallcells')            DATA.plot.synctmax = varargin{1};        elseif strmatch(type,'replot')            PC.PlotXcorrs(DATA,DATA.xcorrs,1:length(DATA.exptid),1);        elseif strmatch(type,'labelcellleft')            DATA.plot.xcorrlabelleft = ~DATA.plot.xcorrlabelleft;            set(a,'checked',onoff{1+DATA.plot.xcorrlabelleft});        elseif strmatch(type,'labelcelltop')            DATA.plot.xcorrlabeltop = ~DATA.plot.xcorrlabeltop;             set(a,'checked',onoff{1+DATA.plot.xcorrlabeltop});        elseif strmatch(type,'exclude')            if length(DATA.plot.xcorrexclude) < varargin{1} || DATA.plot.xcorrexclude(varargin{1}) == 0                DATA.plot.xcorrexclude(varargin{1}) = 1;                set(a,'checked','on');            else                DATA.plot.xcorrexclude(varargin{1}) = 0;                set(a,'checked','off');            end        end    elseif strcmp(fcn,'clusters')       if strmatch(type,{'spksxy'})           PC.PlotAllProbeXY(DATA,'select');           DATA = PC.PlotAllProbe(DATA, 'selectspks');       end    elseif strcmp(fcn,'selectexpts')        PC.SetCheckExclusive(a);        DATA.markexpts = type;        PC.PlotCellList(DATA);        PC.PlotClusterRates(DATA, 'rateseqall');%        PC.PlotClusterRates(DATA, 'rateseqone'); Migh tneed to make this%        depend    elseif strcmp(fcn,'markexpts')        if strcmp(type,'relist')            sms = get(get(a,'parent'),'children');            delete(sms);            PC.AddExptList(get(a,'parent'),'markexpts',DATA)            return;        end        PC.SetCheckExclusive(a);        DATA.markexpts = type;        PC.PlotCellList(DATA);    elseif strcmp(fcn,'probes')       if strmatch(type,{'spoolall' 'spoolcells' 'allspks' 'allcellspks' 'spooleverything' 'spooleverycell' 'selectspks' 'allprobespks' 'AllProbeMean'})            DATA = PC.PlotAllProbe(DATA, type);       elseif strmatch(type,{'exptall'})            DATA = PC.PlotAllProbe(DATA, 'allspks');            PC.PlotAllProbeXY(DATA);       elseif strmatch(type,{'onescale'})           DATA.plotspk.onescale = ~DATA.plotspk.onescale;           set(a,'Checked',onoff{1+DATA.plotspk.onescale});       elseif strmatch(type,{'probeall'})            DATA = PC.PlotAllProbe(DATA, 'allprobespks');            DATA = PC.PlotExptsProbe(DATA, 'AllprobeXY');                  elseif strmatch(type,{'allprobespks' 'alltemplatespks' 'AllprobeXY' 'AllTemplateXY'})            DATA = PC.PlotExptsProbe(DATA, type);       elseif strmatch(type,{'AllMean' 'AllMeanIm' 'AllExptIm'})           PC.PlotAllProbeMean(DATA, type);       elseif strmatch(type,{'AllExptMeanIm'})           PC.PlotAllExptProbeMean(DATA, type);       elseif strncmp(type,'spoolcurrent',8)           PC.SpoolCurrentSpikes(a,b);       elseif strncmp(type,'plotsync',8)           eid = DATA.xcorrs(DATA.xcid).eid;           probes = find(DATA.selectprobe(eid,:));           if strcmp(type,'plotsyncb')               PC.PlotSyncSpikes(DATA, eid, DATA.xcorrs(DATA.xcid).cells, DATA.xcorrs(DATA.xcid).clnum);           else               PC.PlotSyncSpikes(DATA, eid, fliplr(DATA.xcorrs(DATA.xcid).cells), fliplr(DATA.xcorrs(DATA.xcid).clnum));           end       elseif strcmp(type,'spoolsync')           Clusters = getappdata(DATA.toplevel,'Clusters');           eid = DATA.xcorrs(DATA.xcid).eid;           probes = find(DATA.selectprobe(eid,:));           AllSpikes = PC.CheckAllSpikes(DATA, eid, DATA.xcorrs(DATA.xcid).cells,'allprobes');           if isempty(AllSpikes)               fprintf('Spikes have not been loaded\n')               return;           end           PC.SetFigure(DATA,DATA.tag.spikes);           PC.SpoolAllProbes(DATA, eid, AllSpikes(eid,DATA.xcorrs(DATA.xcid).cells), Clusters{eid});       elseif strcmp(type,'SelectXY')           PC.PlotAllProbeXY(DATA,'select');       elseif strcmp(type,'AllXY')           PC.PlotAllProbeXY(DATA);       elseif strcmpi(type,'AllClusterMean')           PC.PlotAllClusterMean(DATA)       else            PC.PlotAllCell(DATA, type);        end    elseif strncmp(fcn,'allcluster',8)        if sum(strcmp(type,{'markmanual' 'markauto' 'markcopy' 'markexclusions' 'markgood' 'markgoodmu'}))            DATA.plot.(type) = ~DATA.plot.(type);            set(a,'Checked',onoff{DATA.plot.(type)+1});            DATA = PC.PlotAllClusters(DATA,[]);        end                elseif strncmp(fcn,'cells',4)        if strcmpi(type,'allplots') || strcmpi(type,'allnext')            if strcmpi(type,'allnext')                DATA.currentcell = DATA.currentcell+1;                F = FindFig(DATA.tag.celllist);                it = findobj(F,'tag','CellNumberId');                set(it,'value',DATA.currentcell);            end            PC.PlotAllCellXY(DATA);%            PC.PlotAllCellMean(DATA,'lineonly');            PC.PlotCellRates(DATA,'rates');            PC.PlotAllCell(DATA, 'allspkswithmean');            [a,b,c] = PC.FindCell(DATA, DATA.currentcell);            X = zeros(size(DATA.CellList,1),size(DATA.CellList,2));            id = sub2ind(size(X),a,b);            X(id) = 1;            if strmatch(DATA.plot.alltype,{'Fit-mahal'})                PC.PlotAllClusters(DATA, [], 'includelist', X);            end        elseif strcmpi(type,'addcontext')            DATA.show.linecontextmenus = ~DATA.show.linecontextmenus;             set(a,'checked',onoff{1+DATA.show.linecontextmenus});        elseif strcmpi(type,'allexpttune')            Expts = getappdata(DATA.toplevel,'Expts');            cname = Expt2Name(Expts{e},'addsuff');            eid = find(strcmp(cname,DATA.expnames));            cellid = unique(DATA.CellList(eid,:,:));            cellid = cellid(cellid > 0);            for j = 1:length(cellid)                id = find(DATA.CellList == cellid(j));                [exid, cid, clid] = ind2sub(size(DATA.CellList),id);                depths(j) = mean(cid);            end            [depths,b] = sort(depths);            cellid = cellid(b);                        if DATA.profiling                profile on;            end            [nr,nc] = Nsubplots(length(cellid));            PC.SetFigure(DATA,DATA.tag.allexpt);            colors = mycolors;            for j = 1:length(cellid)                DATA.selectprobe= zeros(size(DATA.CellList,1),size(DATA.CellList,2));                mysubplot(nr,nc,j);                id = find(DATA.CellList == cellid(j));                [exid, cid, clid] = ind2sub(size(DATA.CellList),id);                [b, id] = ismember(eid,exid);                icolor = find(b);                id = id(id > 0);                [a,b] = sort(exid(id));                id = id(b);                b = sub2ind(size(DATA.selectprobe),exid(id),cid(id));                fprintf('Building Expt for cell %d - %d expts\n',cellid(j),length(b));                DATA.selectprobe(b) = 1;                hold off;                 [a, AllExpt] = PC.PlotSelectedExpts(DATA,'expts', exid(id), cid(id), 'cluster',clid(id),'colors',colors(icolor),'cell',cellid(j));                title(sprintf('Cell %d P%.1f',cellid(j),depths(j)),'verticalalignment','middle');                set(gca,'xtick',[]);            end            if DATA.profiling                profile viewer;            end        elseif strcmpi(type,'allcelltune')            Expts = getappdata(DATA.toplevel,'Expts');            extypes = unique(DATA.exptnames);            cname = Expt2Name(Expts{e},'addsuff');            eid = find(strcmp(cname,DATA.expnames));            cellid = DATA.currentcell;                        id = find(DATA.CellList == cellid);            [exid, cid, clid] = ind2sub(size(DATA.CellList),id);            [nr,nc] = Nsubplots(length(extypes));            PC.SetFigure(DATA,DATA.tag.allexpt);            for j = 1:length(extypes)                DATA.selectprobe= zeros(size(DATA.CellList,1),size(DATA.CellList,2));                mysubplot(nr,nc,j);                eid = find(strcmp(extypes{j},DATA.expnames));                [b, id] = ismember(eid,exid);                id = id(id > 0);                b = sub2ind(size(DATA.selectprobe),exid(id),cid(id));                DATA.selectprobe(b) = 1;                hold off;                 [a, AllExpt] = PC.PlotSelectedExpts(DATA);                title(sprintf('%s',extypes{j}),'verticalalignment','top');            end                        elseif strcmpi(type,'driftestimate')           DATA = PC.CompareShapes(DATA,'exptimage');           %Calls FitDriftMatrix           set(DATA.toplevel,'UserData',DATA);        elseif strmatch(type,{'rateseqall' 'rateseqone'})            PC.PlotClusterRates(DATA, type);        elseif strcmpi(type,'allxy')            PC.PlotAllCellXY(DATA);        elseif strcmpi(type,'watchallcellmean')            DATA.show.watchallcellmean = ~DATA.show.watchallcellmean;            set(a,'checked',onoff{1+DATA.show.watchallcellmean});        elseif strcmpi(type,'watchallcellxy')            DATA.show.watchallcellxy = ~DATA.show.watchallcellxy;            set(a,'checked',onoff{1+DATA.show.watchallcellxy});        elseif strcmpi(type,'watchallcellspks')            DATA.show.watchallcellspks = ~DATA.show.watchallcellspks;            set(a,'checked',onoff{1+DATA.show.watchallcellspks});        elseif strcmpi(type,'summary')            DATA.show.cellsummary = ~DATA.show.cellsummary;            set(a,'checked',onoff{1+DATA.show.cellsummary});        elseif strcmpi(type,'markdepth')            DATA.show.ed = ~DATA.show.ed;            set(a,'checked',onoff{1+DATA.show.ed});            PC.PlotCellList(DATA);        elseif strcmpi(type,'markdropi')            if DATA.markcell.dropi > 0                DATA.markcell.dropi = 0;                set(a,'Checked','off');            else                DATA.markcell.dropi = DATA.crit.dropi;                set(a,'Checked','on');            end            PC.PlotCellList(DATA);        elseif strcmpi(type,'markmahal')            if DATA.markcell.mahal > 0                DATA.markcell.mahal = 0;                set(a,'Checked','off');            else                DATA.markcell.mahal = DATA.crit.mahal;                set(a,'Checked','on');            end            PC.PlotCellList(DATA);        elseif strncmpi(type,'mark',4)                f = type(5:end);                if ~isfield(DATA.markcell,f)                    DATA.markcell.(f) = 1;                else                    DATA.markcell.(f) = ~DATA.markcell.(f) ;                end                set(a,'Checked',onoff{DATA.markcell.(f)+1});            PC.PlotCellList(DATA,listtype);        elseif strncmpi(type,'markellipses',10)            DATA.markcell.ellipses = ~DATA.markcell.ellipses;            set(a,'Checked',onoff{1+DATA.markcell.ellipses});            PC.PlotCellList(DATA);        elseif strcmpi(type,'markcandidates')            DATA.markcell.candidates = ~DATA.markcell.candidates;            set(a,'Checked',onoff{1+DATA.markcell.candidates});            PC.PlotCellList(DATA, listtype);        elseif strcmpi(type,'spkrate+xy')            PC.PlotCellRates(DATA,'both');        elseif strcmpi(type,'spkrate')            PC.PlotCellRates(DATA,'rates');        elseif strcmpi(type,'allmean')            PC.PlotAllCellMean(DATA,'meanlines');        elseif strcmpi(type,'allmeanim')            PC.PlotAllCellMean(DATA,'imageonly');        elseif strcmp(type,'trighist')            PC.PlotAllCell(DATA, type);        elseif strcmp(type,'allcellspks')            PC.PlotAllCell(DATA, type);        elseif strcmp(type,'allspks')            PC.PlotAllCell(DATA, type);        elseif strcmp(type,'spoolall')            PC.PlotAllProbe(DATA, 'spoolcells');        elseif strcmp(type,'spoolone')            PC.PlotAllCellSpikes(DATA);        elseif strcmp(type,'spoolone')            PC.PlotAllCell(DATA, type);        elseif strncmpi(type,'shapesize',5)            res = getappdata(DATA.toplevel,'CellSizes');            if isempty(res) || 1                C = getappdata(DATA.toplevel,'Clusters');                res = CalcCellSize(C, 'CellList', DATA.CellList);                setappdata(DATA.toplevel,'CellSizes',res);            end            F = PC.SetFigure(DATA, 'CellSize');            if strncmpi(type,'shapesize',8)                CalcCellSize(res,'callback',@PC.HitShapePlot);            elseif strncmpi(type,'shapecell',8)                CalcCellSize(res,'onepercell');            end            D = get(F,'UserData');            D.parent = DATA.toplevel;            set(F,'UserData',D);            DATA.figs.cellshape = F;        end    elseif strncmp(fcn,'means',4)        DATA.plotmeantype = type;        C = getappdata(DATA.toplevel,'Clusters');        PC.SetFigure(DATA,DATA.tag.spkmean);        set(a,'Checked','on');        PC.PlotMeanSpike(C{e}{p}, p,0,type);    end        set(DATA.toplevel,'UserData',DATA);